//
//Copyright 2025 Google LLC
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//https://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.23.4
// source: protos/openshiftmetrics/openshiftmetrics.proto

package openshiftmetrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OpenshiftMetricsPayload is the payload for the Openshift WLM metrics.
type OpenshiftMetricsPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The version of the metric payload.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// The version of the agent that generated the metric payload.
	AgentVersion string `protobuf:"bytes,2,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`
	// The ID of the Openshift cluster.
	ClusterId string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The project ID that the workload agent is running in.
	ProjectId string `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The namespaces in the Openshift cluster.
	Namespaces *ResourceListContainer `protobuf:"bytes,5,opt,name=namespaces,proto3" json:"namespaces,omitempty"`
}

func (x *OpenshiftMetricsPayload) Reset() {
	*x = OpenshiftMetricsPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenshiftMetricsPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenshiftMetricsPayload) ProtoMessage() {}

func (x *OpenshiftMetricsPayload) ProtoReflect() protoreflect.Message {
	mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenshiftMetricsPayload.ProtoReflect.Descriptor instead.
func (*OpenshiftMetricsPayload) Descriptor() ([]byte, []int) {
	return file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescGZIP(), []int{0}
}

func (x *OpenshiftMetricsPayload) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OpenshiftMetricsPayload) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *OpenshiftMetricsPayload) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *OpenshiftMetricsPayload) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *OpenshiftMetricsPayload) GetNamespaces() *ResourceListContainer {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

// General container for K8 resources.
type ResourceListContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The K8 resource identifier.
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// The K8 resource api version.
	ApiVersion string `protobuf:"bytes,2,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// The K8 resource metadata.
	Metadata *ResourceListContainer_Metadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The items that are in the container.
	//
	// Types that are assignable to ContainerItems:
	//
	//	*ResourceListContainer_Namespaces
	ContainerItems isResourceListContainer_ContainerItems `protobuf_oneof:"container_items"`
}

func (x *ResourceListContainer) Reset() {
	*x = ResourceListContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceListContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceListContainer) ProtoMessage() {}

func (x *ResourceListContainer) ProtoReflect() protoreflect.Message {
	mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceListContainer.ProtoReflect.Descriptor instead.
func (*ResourceListContainer) Descriptor() ([]byte, []int) {
	return file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceListContainer) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ResourceListContainer) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ResourceListContainer) GetMetadata() *ResourceListContainer_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (m *ResourceListContainer) GetContainerItems() isResourceListContainer_ContainerItems {
	if m != nil {
		return m.ContainerItems
	}
	return nil
}

func (x *ResourceListContainer) GetNamespaces() *NamespaceList {
	if x, ok := x.GetContainerItems().(*ResourceListContainer_Namespaces); ok {
		return x.Namespaces
	}
	return nil
}

type isResourceListContainer_ContainerItems interface {
	isResourceListContainer_ContainerItems()
}

type ResourceListContainer_Namespaces struct {
	Namespaces *NamespaceList `protobuf:"bytes,4,opt,name=namespaces,proto3,oneof"`
}

func (*ResourceListContainer_Namespaces) isResourceListContainer_ContainerItems() {}

// Equivalent to k8s.io/apimachinery/pkg/apis/meta/v1/ObjectMeta
type ResourceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The K8 resource name that is unique within the namespace.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The K8 resource uid.
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// ID of the owning namespace of the resource. If the resource is cluster
	// scoped, this will be empty.
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The K8 resource version.
	ResourceVersion string `protobuf:"bytes,4,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
	// The K8 resource generation.
	Generation int64 `protobuf:"varint,5,opt,name=generation,proto3" json:"generation,omitempty"`
	// The K8 resource creation timestamp.
	CreationTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=creation_timestamp,json=creationTimestamp,proto3" json:"creation_timestamp,omitempty"`
	// K8 labels are identifiers for the resource.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Non-identifying metadata about the resource.
	Annotations map[string]string `protobuf:"bytes,8,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResourceMetadata) Reset() {
	*x = ResourceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceMetadata) ProtoMessage() {}

func (x *ResourceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceMetadata.ProtoReflect.Descriptor instead.
func (*ResourceMetadata) Descriptor() ([]byte, []int) {
	return file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceMetadata) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ResourceMetadata) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResourceMetadata) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *ResourceMetadata) GetGeneration() int64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *ResourceMetadata) GetCreationTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTimestamp
	}
	return nil
}

func (x *ResourceMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ResourceMetadata) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

// Container for K8/OCP namespaces.
type NamespaceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Namespace `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NamespaceList) Reset() {
	*x = NamespaceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceList) ProtoMessage() {}

func (x *NamespaceList) ProtoReflect() protoreflect.Message {
	mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceList.ProtoReflect.Descriptor instead.
func (*NamespaceList) Descriptor() ([]byte, []int) {
	return file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescGZIP(), []int{3}
}

func (x *NamespaceList) GetItems() []*Namespace {
	if x != nil {
		return x.Items
	}
	return nil
}

// Message describing a K8/OCP namespace.
type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResourceMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescGZIP(), []int{4}
}

func (x *Namespace) GetMetadata() *ResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// The K8 resource metadata.
type ResourceListContainer_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceVersion string `protobuf:"bytes,1,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
}

func (x *ResourceListContainer_Metadata) Reset() {
	*x = ResourceListContainer_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceListContainer_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceListContainer_Metadata) ProtoMessage() {}

func (x *ResourceListContainer_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceListContainer_Metadata.ProtoReflect.Descriptor instead.
func (*ResourceListContainer_Metadata) Descriptor() ([]byte, []int) {
	return file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ResourceListContainer_Metadata) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

var File_protos_openshiftmetrics_openshiftmetrics_proto protoreflect.FileDescriptor

var file_protos_openshiftmetrics_openshiftmetrics_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x68, 0x69,
	0x66, 0x74, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x25, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x66, 0x74,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x17, 0x4f, 0x70, 0x65,
	0x6e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x5c, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22,
	0xd1, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x61,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x66,
	0x74, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x56, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x1a, 0x35, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x11, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xb0, 0x04, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x5b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x6a, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x57, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x60, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x61, 0x42, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x01, 0x5a, 0x44,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescOnce sync.Once
	file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescData = file_protos_openshiftmetrics_openshiftmetrics_proto_rawDesc
)

func file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescGZIP() []byte {
	file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescOnce.Do(func() {
		file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescData)
	})
	return file_protos_openshiftmetrics_openshiftmetrics_proto_rawDescData
}

var file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_protos_openshiftmetrics_openshiftmetrics_proto_goTypes = []interface{}{
	(*OpenshiftMetricsPayload)(nil),        // 0: workloadagent.protos.openshiftmetrics.OpenshiftMetricsPayload
	(*ResourceListContainer)(nil),          // 1: workloadagent.protos.openshiftmetrics.ResourceListContainer
	(*ResourceMetadata)(nil),               // 2: workloadagent.protos.openshiftmetrics.ResourceMetadata
	(*NamespaceList)(nil),                  // 3: workloadagent.protos.openshiftmetrics.NamespaceList
	(*Namespace)(nil),                      // 4: workloadagent.protos.openshiftmetrics.Namespace
	(*ResourceListContainer_Metadata)(nil), // 5: workloadagent.protos.openshiftmetrics.ResourceListContainer.Metadata
	nil,                                    // 6: workloadagent.protos.openshiftmetrics.ResourceMetadata.LabelsEntry
	nil,                                    // 7: workloadagent.protos.openshiftmetrics.ResourceMetadata.AnnotationsEntry
	(*timestamppb.Timestamp)(nil),          // 8: google.protobuf.Timestamp
}
var file_protos_openshiftmetrics_openshiftmetrics_proto_depIdxs = []int32{
	1, // 0: workloadagent.protos.openshiftmetrics.OpenshiftMetricsPayload.namespaces:type_name -> workloadagent.protos.openshiftmetrics.ResourceListContainer
	5, // 1: workloadagent.protos.openshiftmetrics.ResourceListContainer.metadata:type_name -> workloadagent.protos.openshiftmetrics.ResourceListContainer.Metadata
	3, // 2: workloadagent.protos.openshiftmetrics.ResourceListContainer.namespaces:type_name -> workloadagent.protos.openshiftmetrics.NamespaceList
	8, // 3: workloadagent.protos.openshiftmetrics.ResourceMetadata.creation_timestamp:type_name -> google.protobuf.Timestamp
	6, // 4: workloadagent.protos.openshiftmetrics.ResourceMetadata.labels:type_name -> workloadagent.protos.openshiftmetrics.ResourceMetadata.LabelsEntry
	7, // 5: workloadagent.protos.openshiftmetrics.ResourceMetadata.annotations:type_name -> workloadagent.protos.openshiftmetrics.ResourceMetadata.AnnotationsEntry
	4, // 6: workloadagent.protos.openshiftmetrics.NamespaceList.items:type_name -> workloadagent.protos.openshiftmetrics.Namespace
	2, // 7: workloadagent.protos.openshiftmetrics.Namespace.metadata:type_name -> workloadagent.protos.openshiftmetrics.ResourceMetadata
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_protos_openshiftmetrics_openshiftmetrics_proto_init() }
func file_protos_openshiftmetrics_openshiftmetrics_proto_init() {
	if File_protos_openshiftmetrics_openshiftmetrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenshiftMetricsPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceListContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceListContainer_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ResourceListContainer_Namespaces)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_openshiftmetrics_openshiftmetrics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_openshiftmetrics_openshiftmetrics_proto_goTypes,
		DependencyIndexes: file_protos_openshiftmetrics_openshiftmetrics_proto_depIdxs,
		MessageInfos:      file_protos_openshiftmetrics_openshiftmetrics_proto_msgTypes,
	}.Build()
	File_protos_openshiftmetrics_openshiftmetrics_proto = out.File
	file_protos_openshiftmetrics_openshiftmetrics_proto_rawDesc = nil
	file_protos_openshiftmetrics_openshiftmetrics_proto_goTypes = nil
	file_protos_openshiftmetrics_openshiftmetrics_proto_depIdxs = nil
}
